<?php

namespace Payment\Interfaces;

class Tiancheng extends Order
{


    public function create($usrid, $money, $Type, $config)
    {
        $order = parent::create($usrid, $money, $Type, $config); // TODO: Change the autogenerated stub
        $this->AppUrl = $config['AppUrl'];

        //微信901
        switch ($Type) {
            case 10:
                $PayType = '901';
                break;
            case 20:
                $PayType = '904';
                break;
            default:
                $this->app->response('0001', [], '支付通道暂时关闭');

        }
        $formData = [
            'amount' => bcmul($order['Money'],0.01,2),
            'customer_no' => $config['AppID'],
            'customer_order' => $order['OrderNo'],
            'produce_date' =>date("Y-m-d H:i:s"),
            'notify_url' => $this->NotifyUrl,
            "bank_code" => $PayType,
            "callback_url"=>"https://www.baidu.com",
        ];

        ksort($formData);
        $md5str = "";
        foreach ($formData as $key => $val) {
            $md5str = $md5str . $key . "=" . $val . "&";
        }
        $sign = strtoupper(md5($md5str . "key=" . $config['AppKey']));
        $formData["sign_md5"] = $sign;
        $formData['append_fields'] = "1234|456";
        $formData['goods_name'] ='VIP基础服务';
        $tjurl = $config['AppUrl'].'/Pay_Defray.html';
        // json_encode($formData) ;// $this->app->View(get_defined_vars(),'Order.Tiancheng');
        //$this->app->response('0000', [], '下单成功', $tjurl, 302);
        return $this->app->View(get_defined_vars(),'Order.Tiancheng');


    }

    public function Ratify($order, $data, $config){


        $formData = [
            'merchant_user_id' => $config['AppID'],
            'out_trade_no' => $order['OrderNo'],
            "sign_type"=>"MD5",
        ];

        $formData['sign'] = $this->makeSign($formData,$config['AppKey']);

        $data = $this->api('/gateway/merchant/query', json_encode($formData), ['Content-Type' => 'application/json']);

        if ($data['code'] == 200 && !empty($data['data']['trade_order_no'])) {
            if(($data['data']['order_status']=='SUCCESS'||$data['data']['order_status']=='success') &&!empty($data['data']['pay_amount'])){
                $order['RealMoney'] = $data['data']['pay_amount']*100;
                parent::Notify($order, $data, $config); // TODO: Change the autogenerated stub
                $this->app->response('0000', [], '订单支付成功');
            }
            $this->app->response('0001', [], '订单尚未支付');
        } else {
            $this->app->response('0001', [], '订单查询失败');
        }
    }

    public function Notify($order, $data, $config)
    {
        if ($order['Status'] == 1) {
            return 'success';
        }
        $sign = $data['sign_md5'];
        $_data = [
            "customer_no"    =>  $data["customer_no"],    // 商户ID
            "customer_order" =>  $data["customer_order"], // 订单号
            "amount"         =>  $data["amount"],         // 交易金额
            "trading_time"   =>  $data["trading_time"],   // 交易时间
            "trading_num"    =>  $data["trading_num"],    // 支付流水号
            "trading_code"   =>  $data["trading_code"],   //交易状态
        ];

        if ($sign != $this->makeSign($_data, $config['AppKey'])) {
            return '签名错误';
        }
        if ($order['Status'] == 0) {
            if ($_data["trading_code"] == "00") {
                $order['RealMoney'] = $data['amount']*100;
                parent::Notify($order, $data, $config); // TODO: Change the autogenerated stub
                return 'ok';
            }
            return '订单处理失败';
        }

        return '订单处理失败';

    }

    public function makeSign($paramArr, $appSecret)
    {
        $returnArray = array( // 返回字段
            "customer_no"    =>  $paramArr["customer_no"],    // 商户ID
            "customer_order" =>  $paramArr["customer_order"], // 订单号
            "amount"         =>  $paramArr["amount"],         // 交易金额
            "trading_time"   =>  $paramArr["trading_time"],   // 交易时间
            "trading_num"    =>  $paramArr["trading_num"],    // 支付流水号
            "trading_code"   =>  $paramArr["trading_code"],   //交易状态
        );
        $md5key = $appSecret;
        ksort($returnArray);
        reset($returnArray);
        $md5str = "";
        foreach ($returnArray as $key => $val) {
            $md5str = $md5str . $key . "=" . $val . "&";
        }
        $sign = strtoupper(md5($md5str . "key=" . $md5key));
        return  $sign;
    }

}